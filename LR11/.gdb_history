start
layout next
n
b main
run input.txt output.txt
n
p fileSize
pi fileSize
n
p file
p flag
n
p storage
pw storafe
x/w &storage
x/dw &storage
p *buf
p buf
b fn_memcpy(_IO_FILE*, char*, int) 
run input.txt output.txt
layout next
n
b main
run input.txt output.txt
layout next
n
p buf
p *buf
b main
run input.txt output.txt
layout next
n
p buf
p fn_memcpy(_IO_FILE*, char*, int) 
b fn_memcpy(_IO_FILE*, char*, int) 
run input.txt output.txt
layout next
n
p c
x/ws &c
n
p buf
p buf-1
n
p c
x/ws &$5
n
p buf
p buf-25
n
p buf
n
p storage
n
p *buf
p/s *buf
p/c *buf
p/s *buf
p/s buf
n
p storage
b fn_memcpy(_IO_FILE*, char*, int) 
run input.txt output.txt
layout next
n
p storage
p flag
n
p getPrev(storage)
n
p storage
n
p storage
p flag
n
p getPrev(storage)
p
n
p storage
p flag
b main
run input.txt output.txt
layout next
b 57
c
n
p flag
p storage
run input.txt output.txt
c
n
p storage
n
p storage
s
p flag
start
start input.txt output.txt
layout next
b 58
n
c
n
n
p flag
n
n
pflag
p flag
p storage
p storage & 0xff
p storage >> 8
p refreshFlag(0x2f2f, 0)
p flag
p flag == 0
p flag == 1
n
p storage
n
n
b main
run input.txt output.txt
layout next
b 60
c
c
c
c
c
c
c
p storage 
n
p storage
n
p refreshFlag(storage, flag)
n
start input.txt output.txt
layout next
n
p buffer
n
p storage
n
p storage
n
